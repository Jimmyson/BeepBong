// <auto-generated />
using System;
using BeepBong.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeepBong.DataAccess.Migrations
{
    [DbContext(typeof(BeepBongContext))]
    [Migration("20190523121531_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("BeepBong.Domain.Models.Broadcaster", b =>
                {
                    b.Property<Guid>("BroadcasterId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("Name");

                    b.HasKey("BroadcasterId");

                    b.ToTable("Broadcasters");
                });

            modelBuilder.Entity("BeepBong.Domain.Models.Channel", b =>
                {
                    b.Property<Guid>("ChannelId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BroadcasterId");

                    b.Property<DateTime?>("Closed");

                    b.Property<DateTime?>("Commencement");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("Name");

                    b.HasKey("ChannelId");

                    b.HasIndex("BroadcasterId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("BeepBong.Domain.Models.Library", b =>
                {
                    b.Property<Guid>("LibraryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlbumName");

                    b.Property<string>("Catalog");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Label");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("MBID");

                    b.HasKey("LibraryId");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("BeepBong.Domain.Models.Programme", b =>
                {
                    b.Property<Guid>("ProgrammeId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AirDate");

                    b.Property<Guid?>("ChannelId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LogoLocation");

                    b.Property<string>("Name");

                    b.HasKey("ProgrammeId");

                    b.HasIndex("ChannelId");

                    b.ToTable("Programmes");
                });

            modelBuilder.Entity("BeepBong.Domain.Models.ProgrammeTrackList", b =>
                {
                    b.Property<Guid>("ProgrammeId");

                    b.Property<Guid>("TrackListId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("LastModified");

                    b.HasKey("ProgrammeId", "TrackListId");

                    b.HasIndex("TrackListId");

                    b.ToTable("ProgrammeTrackLists");
                });

            modelBuilder.Entity("BeepBong.Domain.Models.Sample", b =>
                {
                    b.Property<Guid>("SampleId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AudioChannelCount");

                    b.Property<int>("BitDepth");

                    b.Property<int>("BitRate");

                    b.Property<string>("BitRateMode")
                        .IsRequired();

                    b.Property<string>("Codec");

                    b.Property<string>("Compression")
                        .IsRequired();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Fingerprint");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("Notes");

                    b.Property<string>("OtherAttributes");

                    b.Property<int>("SampleCount");

                    b.Property<int>("SampleRate");

                    b.Property<string>("Spectrograph");

                    b.Property<Guid>("TrackId");

                    b.Property<string>("Waveform");

                    b.HasKey("SampleId");

                    b.HasIndex("Fingerprint")
                        .IsUnique();

                    b.HasIndex("TrackId");

                    b.ToTable("Samples");
                });

            modelBuilder.Entity("BeepBong.Domain.Models.Track", b =>
                {
                    b.Property<Guid>("TrackId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid>("TrackListId");

                    b.Property<string>("Variant");

                    b.HasKey("TrackId");

                    b.HasIndex("TrackListId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("BeepBong.Domain.Models.TrackList", b =>
                {
                    b.Property<Guid>("TrackListId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Composer");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("LastModified");

                    b.Property<bool>("Library");

                    b.Property<string>("Name");

                    b.HasKey("TrackListId");

                    b.ToTable("TrackLists");
                });

            modelBuilder.Entity("BeepBong.Domain.Models.Channel", b =>
                {
                    b.HasOne("BeepBong.Domain.Models.Broadcaster", "Broadcaster")
                        .WithMany("Channels")
                        .HasForeignKey("BroadcasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BeepBong.Domain.Models.Programme", b =>
                {
                    b.HasOne("BeepBong.Domain.Models.Channel", "Channel")
                        .WithMany("Programmes")
                        .HasForeignKey("ChannelId");
                });

            modelBuilder.Entity("BeepBong.Domain.Models.ProgrammeTrackList", b =>
                {
                    b.HasOne("BeepBong.Domain.Models.Programme", "Programme")
                        .WithMany("ProgrammeTrackLists")
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeepBong.Domain.Models.TrackList", "TrackList")
                        .WithMany("ProgrammeTrackLists")
                        .HasForeignKey("TrackListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BeepBong.Domain.Models.Sample", b =>
                {
                    b.HasOne("BeepBong.Domain.Models.Track", "Track")
                        .WithMany("Samples")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BeepBong.Domain.Models.Track", b =>
                {
                    b.HasOne("BeepBong.Domain.Models.TrackList", "TrackList")
                        .WithMany("Tracks")
                        .HasForeignKey("TrackListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
