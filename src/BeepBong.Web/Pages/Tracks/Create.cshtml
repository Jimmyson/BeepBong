@page
@model BeepBong.Web.Pages.Tracks.CreateModel

@{
    ViewData["Title"] = "Create";
	var ProgrammeId = Request.Query["ProgrammeId"];
}

<h1>Create</h1>

<h4>Track</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Track.Name" class="control-label"></label>
                <input asp-for="Track.Name" class="form-control" />
                <span asp-validation-for="Track.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Track.Subtitle" class="control-label"></label>
                <input asp-for="Track.Subtitle" class="form-control" />
                <span asp-validation-for="Track.Subtitle" class="text-danger"></span>
            </div>
            <div class="form-group">
				@if(String.IsNullOrEmpty(ProgrammeId)) {
                    <label asp-for="Track.ProgrammeId" class="control-label"></label>
                	<select asp-for="Track.ProgrammeId" class ="form-control" asp-items="ViewBag.ProgrammeId"></select>
				} else {
					<input type="hidden" asp-for="Track.ProgrammeId" value="@ProgrammeId" />
				}
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
