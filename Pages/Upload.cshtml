@page
@model BeepBong.Pages.Samples.UploadModel

@{
    ViewData["Title"] = "Upload";
	var TrackId = Request.Query["TrackId"];
}

<script src="https://unpkg.com/wavesurfer.js"></script>
<script src="https://unpkg.com/wavesurfer.js/dist/plugin/wavesurfer.spectrogram.min.js" type="text/javascript"></script>
<style>
	.play {
		padding: 0px;
		margin: 0px;
	}
</style>

<h1>Upload</h1>

<h4>Sample</h4>
<hr />
<div class="row">
	<div class="col-md-12">
		<input type="file" id="input">
	</div>
</div>
<hr />
<div class="row play">
	<div class="col-md-12 play" id="waveform"></div>
	<div class="col-md-12 play" id="waveform-spec"></div>
</div>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <!-- <div class="form-group">
                <label asp-for="Sample.Duration" class="control-label"></label>
                <input asp-for="Sample.Duration" class="form-control" />
                <span asp-validation-for="Sample.Duration" class="text-danger"></span>
            </div> -->
            <div class="form-group">
                <label asp-for="Sample.SampleRate" class="control-label"></label>
                <input asp-for="Sample.SampleRate" class="form-control" />
                <span asp-validation-for="Sample.SampleRate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sample.SampleCount" class="control-label"></label>
                <input asp-for="Sample.SampleCount" class="form-control" />
                <span asp-validation-for="Sample.SampleCount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sample.Channels" class="control-label"></label>
                <input asp-for="Sample.Channels" class="form-control" />
                <span asp-validation-for="Sample.Channels" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sample.BitRate" class="control-label"></label>
                <input asp-for="Sample.BitRate" class="form-control" />
                <span asp-validation-for="Sample.BitRate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sample.BitRateMode" class="control-label"></label>
                <!-- <input asp-for="Sample.BitRateMode" class="form-control" /> -->
				<select asp-for="Sample.BitRateMode" class="form-control" asp-items="ViewBag.BitRateMode"></select>
                <span asp-validation-for="Sample.BitRateMode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sample.Codec" class="control-label"></label>
                <input asp-for="Sample.Codec" class="form-control" />
                <span asp-validation-for="Sample.Codec" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sample.Compression" class="control-label"></label>
                <!-- <input asp-for="Sample.Compression" class="form-control" /> -->
				<select asp-for="Sample.Compression" class="form-control" asp-items="ViewBag.Compression"></select>
                <span asp-validation-for="Sample.Compression" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sample.Checksum" class="control-label"></label>
                <input asp-for="Sample.Checksum" class="form-control" />
                <span asp-validation-for="Sample.Checksum" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sample.Notes" class="control-label"></label>
                <textarea asp-for="Sample.Notes" class="form-control"></textarea>
                <span asp-validation-for="Sample.Notes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sample.TrackId" class="control-label"></label>
				@if(String.IsNullOrEmpty(TrackId)) {
                	<select asp-for="Sample.TrackId" class ="form-control" asp-items="ViewBag.TrackId"></select>
				} else {
					<input type="hidden" asp-for="Sample.TrackId" value="@TrackId" />
				}
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
	<div class="col-md-8">
		<div id="result"></div>
	</div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>


<!-- MediaInfo -->
<script type="text/javascript">
	var wavesurfer = WaveSurfer.create({
		container: '#waveform',
		waveColor: 'violet',
		progressColor: 'purple',
		splitChannels: true,
		forceDecode: true,
		plugins: [
			WaveSurfer.spectrogram.create({
				wavesurfer: wavesurfer,
				container: "#waveform-spec"
				//labels: true
			})
		]
	});

	wavesurfer.on('ready', function () {
		wavesurfer.play();
	});

	// Load the WebAssembly MediaInfo module if the browser supports it,
	// otherwise load the asmjs module
	var MediaInfoJs = document.createElement('script');
	if ('WebAssembly' in window) {
		MediaInfoJs.src = "../lib/mediainfojs/MediaInfoWasm.js";
	} else {
		MediaInfoJs.src = "../lib/mediainfojs/MediaInfo.js";
	}
	document.body.appendChild(MediaInfoJs);

	// Continue initialization
	MediaInfoJs.onload = function () {
		var MediaInfoModule, MI, processing = false, CHUNK_SIZE = 1024 * 1024;

		var finish = function() {
			MI.Close();
			MI.delete();
			processing = false;
		}

		// Examples about how to get results
		var showResult = function() {
			MI.Option('Inform'); // Reset custom output

			document.getElementById('Sample_SampleRate').value = MI.Get(MediaInfoModule.Stream.Audio, 0, 'SamplingRate');
			document.getElementById('Sample_SampleCount').value = MI.Get(MediaInfoModule.Stream.Audio, 0, 'SamplingCount');
			document.getElementById('Sample_Channels').value = MI.Get(MediaInfoModule.Stream.Audio, 0, 'Channel(s)');
			document.getElementById('Sample_BitRate').value = MI.Get(MediaInfoModule.Stream.Audio, 0, 'BitRate');
			document.getElementById('Sample_BitRateMode').value = MI.Get(MediaInfoModule.Stream.Audio, 0, 'BitRate_Mode');

			var codec = MI.Get(MediaInfoModule.Stream.Audio, 0, 'Format') + 
						MI.Get(MediaInfoModule.Stream.Audio, 0, 'Format_Version') + 
						MI.Get(MediaInfoModule.Stream.Audio, 0, 'Format_Profile') + 
						MI.Get(MediaInfoModule.Stream.Audio, 0, 'Format_Level');
						//MI.Get(MediaInfoModule.Stream.Audio, 0, 'Format_Settings');
			document.getElementById('Sample_Codec').value = codec;

			document.getElementById('Sample_Compression').value = MI.Get(MediaInfoModule.Stream.Audio, 0, 'Compression_Mode');

			var notes = MI.Get(MediaInfoModule.Stream.General, 0, 'Producer') + ' ' + MI.Get(MediaInfoModule.Stream.General, 0, 'Encoded_Date');
			document.getElementById('Sample_Notes').value = notes;

			document.getElementById('result').innerText = MI.Get(MediaInfoModule.Stream.Audio, 0, 'SamplingRate') + '\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.Audio, 0, 'SamplingCount') + '\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.Audio, 0, 'Duration/String3') + '\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.Audio, 0, 'BitRate_Mode') + '\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.Audio, 0, 'BitRate') + '\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.Audio, 0, 'Compression_Mode') + '\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.Audio, 0, 'Channel(s)') + '\r\n';
			document.getElementById('result').innerText += '\r\n';
			document.getElementById('result').innerText += 'Format\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.Audio, 0, 'Format') + '\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.Audio, 0, 'Format_Version') + '\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.Audio, 0, 'Format_Profile') + '\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.Audio, 0, 'Format_Level') + '\r\n';
			document.getElementById('result').innerText += '\r\n';
			document.getElementById('result').innerText += 'Special\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.General, 0, 'Producer') + '\r\n';
			document.getElementById('result').innerText += MI.Get(MediaInfoModule.Stream.General, 0, 'Encoded_Date') + '\r\n';

			finish();
		}

		var parseFile = function(file, callback) {
			if (processing) {
				return;
			}

			processing = true;

			var offset = 0;

			// Initialise MediaInfo
			MI = new MediaInfoModule.MediaInfo();

			//Open the file
			MI.Open(file, callback);
		}

		// Initialise emscripten module
		MediaInfoModule = MediaInfoLib({'postRun': function()
			{
				console.debug('MediaInfo ready');

				// Get selected file
				var input = document.getElementById('input');
				input.onchange = function()
				{
					if (input.files.length > 0)
					{
						document.getElementById('result').innerText = "Processing...";
						parseFile(input.files[0], showResult);
						wavesurfer.loadBlob(input.files[0]);
					}
				}
			}
		});
	};
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
